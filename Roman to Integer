class Solution {
public:
    int romanToInt(string s) {
        int n = s.length();

        unordered_map<char,int> romanToValue;
        romanToValue['I'] = 1;
        romanToValue['V'] = 5;
        romanToValue['X'] = 10;
        romanToValue['L'] = 50;
        romanToValue['C'] = 100;
        romanToValue['D'] = 500;
        romanToValue['M'] = 1000;
        int ans = 0;
        int i=n-1;

        while(i>0){
            int curr = 0;
            if((romanToValue[s[i]]) > (romanToValue[s[i-1]])){
                 curr = romanToValue[s[i]] - romanToValue[s[i-1]];
                 i = i-2;
            }

            else{
                curr = romanToValue[s[i]];
                i = i-1;;
            }

            ans = ans + curr;
            
        }

        if(i==0) ans = ans + romanToValue[s[i]];

        return ans;
        
    }
};